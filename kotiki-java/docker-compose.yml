version: '3.8'
services:
  storage:
    container_name: storage
    image: postgres:12
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 777
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  rabbitmq:
    container_name: rabbitMQ
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
  cats-service:
    build:
      context: .
      dockerfile: ./cats/Dockerfile
    depends_on:
      storage:
        condition: service_healthy
      - rabbitmq
    ports:
      - "8081"
    environment:
      - "SPRING_RABBITMQ_HOST=rabbitmq"
      - "LOGSTASH_HOST=host.docker.internal"
    tty:
      true
    restart:
      unless-stopped
  owners-service:
    build:
      context: .
      dockerfile: ./owners/Dockerfile
    depends_on:
      storage:
        condition: service_healthy
      - rabbitmq
    ports:
      - "8082"
    environment:
      - "SPRING_RABBITMQ_HOST=rabbitmq"
      - "LOGSTASH_HOST=host.docker.internal"
    tty:
      true
    restart:
      unless-stopped
  users-service:
    build:
      context: .
      dockerfile: ./user-interface/Dockerfile
    depends_on:
      storage:
        condition: service_healthy
      - rabbitmq
    ports:
      - "8080"
    environment:
      - "SPRING_RABBITMQ_HOST=rabbitmq"
      - "LOGSTASH_HOST=host.docker.internal"
    tty:
      true
    restart:
      unless-stopped